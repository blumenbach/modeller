import net.researchgate.release.GitAdapter

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'net.researchgate.release' version '2.6.0'
    id 'io.codearte.nexus-staging' version '0.9.0'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    group = 'cool.pandora'

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.9

    javadoc {
        options.addStringOption("-add-modules", "java.xml.bind")
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs.add("-Xlint:unchecked")
            options.compilerArgs.add("-Xlint:deprecation")
            options.compilerArgs.addAll(["--add-modules", "java.se.ee"])
        }
    }

    release {
        tagTemplate = '$name-$version'
        scmAdapters = [
                GitAdapter
        ]

        git {
            requireBranch = 'master'
            pushToRemote = 'origin'
            pushToBranchPrefix = ''
            commitVersionFileOnly = false
        }
    }
}

subprojects {
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.hierynomus.license'
    apply plugin: 'jacoco'

    ext {
        vendor = 'Pan-dora Ecosystem'
        homepage = 'http://pandora.cool'
        docURL = 'https://github.com/pan-dora/pandora-demo/wiki'
        license = 'Apache 2'
    }

    task processConfig(type: Copy) {
        from('src/main/cfg') {
            include '**/*.cfg'
        }
        into 'build/cfg/main'
    }

    task sourceJar(type: Jar) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    jar {
        manifest {
            attributes 'Main-Class': 'cool.pandora.modeller.ModellerApplication'
        }
    }

    artifacts {
        archives sourceJar
    }

    classes {
        classes.dependsOn processConfig
    }

    checkstyle {
        configFile = rootProject.file('build/checkstyle/checkstyle.xml')
        configProperties.checkstyleConfigDir = rootProject.file('build/checkstyle/')
        toolVersion = "8.1"
    }

    jacoco {
        toolVersion = "0.7.9"
    }

    license {
        include "**/*.java"
        header rootProject.file('build/license/HEADER.txt')
        strictCheck true
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
        repositories {
            maven {
                url "$buildDir/maven"
            }
        }
    }

    modifyPom {
        //noinspection GroovyAssignabilityCheck
        project {
            name 'Modeller'
            description 'A BagIt and Fedora Client'
            url 'https://github.com/pan-dora/modeller/'
            inceptionYear '2017'
            description 'Modeller'

            organization {
                name project.vendor
                url project.homepage
            }

            developers {
                developer {
                    id 'christopher-johnson'
                    name 'Christopher Johnson'
                    email 'chjohnson @ (domain of organization url)'
                    organization 'Pan-dora Ecosystem'
                    organizationUrl 'https://pan-dora.github.io/'
                    roles {
                        role 'developer'
                    }
                    timezone '+1'
                }
            }

            scm {
                connection 'scm:git:git://github.com/pan-dora/modeller.git'
                developerConnection 'scm:git:git@github.com/pan-dora/modeller.git'
                url 'https://github.com/pan-dora/modeller/'
                tag 'HEAD'
            }

            licenses {
                license {
                    name 'Apache License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0'
                }
            }
        }
    }

    nexusStaging {
        packageGroup = "cool.pandora"
        stagingProfileId = "4d5f13c386f543"
    }

    nexus {
        sign = true
        repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

configurations {
    buildToolsConfig
}


dependencies {
    buildToolsConfig "cool.pandora:pandora-build-tools:0.1.3"
}

task processBuildTools(type: Copy) {
    from {
        configurations.buildToolsConfig.collect {
            zipTree(it).matching {
                include 'checkstyle/*.xml'
                include 'license/*.txt'
            }
        }
    }
    into 'build'
}

check.dependsOn processBuildTools

